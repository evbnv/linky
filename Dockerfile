# СТАДИЯ 1: BUILDER (Собирает код)
# Используем Alpine для небольшой базы.
FROM golang:1.23-alpine AS builder

WORKDIR /app

# Копируем и загружаем зависимости для эффективного кэширования
COPY go.mod go.sum ./
RUN go mod download

# Копируем исходный код
COPY . .

# Компилируем приложение. CGO_ENABLED=0 и ldflags уменьшают размер бинарника.
# Имя бинарника: /linky (вместо "main", чтобы было понятнее)
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o /linky . 

# -------------------------------------------------------------------

# СТАДИЯ 2: PRODUCTION (Финальный образ)
# Используем "scratch" - самый маленький и безопасный образ (нет ОС, нет шелла).
FROM scratch

# Копируем только скомпилированный бинарник из первой стадии.
COPY --from=builder /linky /linky

# Копируем статические веб-файлы, необходимые для работы Linky.
COPY web /web

# Документируем порт
EXPOSE 8080

# Запускаем приложение как основной процесс.
ENTRYPOINT ["/linky"]